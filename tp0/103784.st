Object subclass: #Alumno	instanceVariableNames: 'nombre notas'	classVariableNames: ''	package: '103784'!!Alumno methodsFor: 'accessing' stamp: 'LukasDAR 4/18/2020 09:03'!notas	^notas.! !!Alumno methodsFor: 'adding' stamp: 'LukasDAR 4/18/2020 08:39'!añadirNota: nuevaNota	notas add: nuevaNota! !!Alumno methodsFor: 'setter' stamp: 'LukasDAR 4/18/2020 08:14'!establecerNombre: nombreAlumno	nombre := nombreAlumno.! !!Alumno methodsFor: 'initialization' stamp: 'LukasDAR 4/18/2020 08:39'!initialize	notas := OrderedCollection new.! !Object subclass: #Curso	instanceVariableNames: 'nombre alumnos'	classVariableNames: ''	package: '103784'!!Curso methodsFor: 'initialization' stamp: 'LukasDAR 4/18/2020 10:28'!initialize	alumnos := Dictionary new.	! !!Curso methodsFor: 'utility' stamp: 'LukasDAR 4/18/2020 09:51'!aprobo: padronDelAlumno	"El alumno se considera aprobado cuando su promedio supere el 4 ó sea igual a 4"	^((self promedioDe: padronDelAlumno) >= 4).! !!Curso methodsFor: 'utility' stamp: 'LukasDAR 4/18/2020 09:53'!promedioDe: padronDelAlumno	"Se calcula el promedio del alumno como la suma de las notas dividido por la cantidad de notas"	| notasDelAlumno |	notasDelAlumno := ( alumnos at: padronDelAlumno ) notas.	^(notasDelAlumno sum) / (notasDelAlumno size).! !!Curso methodsFor: 'adding' stamp: 'LukasDAR 4/18/2020 09:52'!inscribirAlumno: alumnoAInscribir conNumeroDePadron: numeroDePadron	"Añade al diccionario el alumno a inscribir con clave su numero de padron"	alumnos at: numeroDePadron put: alumnoAInscribir! !!Curso methodsFor: 'adding' stamp: 'LukasDAR 4/18/2020 09:52'!calificarA: padronDelAlumno conNota: notaDelAlumno	"Añade al alumno del padron la nota"	( alumnos at: padronDelAlumno ) añadirNota: notaDelAlumno.	! !!Curso methodsFor: 'setter' stamp: 'LukasDAR 4/18/2020 08:14'!establecerNombre: nombreCurso	nombre := nombreCurso ! !