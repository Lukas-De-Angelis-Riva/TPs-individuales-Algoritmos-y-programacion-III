TestCase subclass: #PruebasSocio	instanceVariableNames: ''	classVariableNames: ''	package: 'tp0.5-test'!!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:55'!test04UnSocioAsignadoComoNoVipQuePagóUnaCuotaCuandoSePideCuantoPagoDevuelveElMismoNumero	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	socio pagarCuota: 400.	self assert: socio cantidadPagada equals: 400.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:56'!test04UnSocioAsignadoComoNoVipQuePagóDosCuotasCuandoSePideCuantoPagoDevuelveLaSumaDeLasCuotas	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	socio pagarCuota: 400.	socio pagarCuota: 300.	self assert: socio cantidadPagada equals: 700.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:56'!test05UnSocioAsignadoComoVipQuePagóDosCuotasCuandoSePideCuantoPagoDevuelveLaSumaDeLasCuotas	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	socio hacerVip.	socio pagarCuota: 400.	socio pagarCuota: 300.	self assert: socio cantidadPagada equals: 700.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:44'!test02UnSocioAlCrearseNoEsVip	|socio|	socio := Socio new.	self assert: (socio esVip) not.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 16:37'!test01ElSocioTieneElNombreCorrectoAlSerAsignado	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	self assert: (socio nombre) equals: 'Jorge'.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:56'!test06UnSocioAsignadoComoVipQuePagóDosCuotasCuandoSePideCuantoPagoDevuelveLaSumaDeLasCuotas	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	socio hacerVip.	socio pagarCuota: 400.	socio pagarCuota: 300.	self assert: socio cantidadPagada equals: 700.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:54'!test03UnSocioAsignadoComoVipQuePagóUnaCuotaCuandoSePideCuantoPagoDevuelveElMismoNumero	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	socio hacerVip.	socio pagarCuota: 150.	self assert: socio cantidadPagada equals: 150.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:58'!test07UnSocioAlSerCreadoNoPagoNada	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	self assert: socio cantidadPagada equals: 0.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:44'!test03UnSocioAsignadoComoVipDevuelveSerVip	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	socio hacerVip.	self assert: socio esVip.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:55'!test03UnSocioAsignadoComoNoVipQuePagóUnaCuotaCuandoSePideCuantoPagoDevuelveElMismoNumero	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	socio pagarCuota: 400.	self assert: socio cantidadPagada equals: 400.! !!PruebasSocio methodsFor: 'tests' stamp: 'LukasDAR 4/30/2020 18:56'!test05UnSocioAsignadoComoNoVipQuePagóDosCuotasCuandoSePideCuantoPagoDevuelveLaSumaDeLasCuotas	|socio|	socio := Socio new.	socio establecerNombre: 'Jorge'.	socio pagarCuota: 400.	socio pagarCuota: 300.	self assert: socio cantidadPagada equals: 700.! !